{"version":3,"sources":["webpack:///webpack/bootstrap b48d4f831b03c87889cf","webpack:///./src/index.js","webpack:///external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}"],"names":["XHRUploader","url","PropTypes","string","isRequired","fieldName","buttonLabel","accept","chunks","bool","chunkSize","number","props","state","items","xhrs","refs","fileInput","click","filesToItems","files","setState","upload","filter","item","cancelled","forEach","uploadItem","BYTES_PER_CHUNK","SIZE","file","size","start","end","chunkIndex","uploadChunk","slice","name","uploadFile","blob","fileName","formData","FormData","xhr","XMLHttpRequest","append","open","send","index","fileItems","Array","prototype","call","maxFiles","map","f","i","chunkProgress","j","push","progress","onClick","display","onFileSelect","renderButton","renderInput","Component"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b48d4f831b03c87889cf\n **/","import React from 'react';\n\nexport default class XHRUploader extends React.Component {\n\n  static get propTypes() {\n    return {\n      url: React.PropTypes.string.isRequired,\n      fieldName: React.PropTypes.string,\n      buttonLabel: React.PropTypes.string,\n      accept: React.PropTypes.string,\n      chunks: React.PropTypes.bool,\n      chunkSize: React.PropTypes.number,\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      fieldName: 'datafile',\n      buttonLabel: 'Upload',\n      accept: 'image/*',\n      chunks: false,\n      chunkSize: 512 * 1024\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {items: []};\n    this.xhrs = [];\n  }\n\n  onClick() {\n    this.refs.fileInput.click();\n  }\n\n  onFileSelect() {\n    const items = this.filesToItems(this.refs.fileInput.files);\n    this.setState({items: items}, () => {\n        this.upload();\n    });\n  }\n\n  upload() {\n    const items = this.state.items;\n    if(items) {\n      items.filter(item => !item.cancelled).forEach((item) => {\n        this.uploadItem(item);\n      });\n    }\n  }\n\n  uploadItem(item) {\n    if(this.props.chunks) {\n      const BYTES_PER_CHUNK = this.props.chunkSize;\n      const SIZE = item.file.size;\n\n      let start = 0;\n      let end = BYTES_PER_CHUNK;\n\n      let chunkIndex = 0;\n      while(start < SIZE) {\n        this.uploadChunk(item.file.slice(start, end), chunkIndex++, item.file.name);\n        start = end;\n        end = start + BYTES_PER_CHUNK;\n      }\n    } else {\n      this.uploadFile(item.file);\n    }\n  }\n\n  uploadChunk(blob, chunkIndex, fileName) {\n    if(blob) {\n      const formData = new FormData();\n      const xhr = new XMLHttpRequest();\n\n      formData.append(this.props.fieldName, blob, `${fileName}-chunk${chunkIndex}`);\n\n      xhr.open('POST', this.props.url, true);\n      xhr.send(formData);\n    }\n  }\n\n  uploadFile(file) {\n    if(file) {\n      const formData = new FormData();\n      const xhr = new XMLHttpRequest();\n\n      formData.append(this.props.fieldName, file, file.name);\n\n      xhr.open('POST', this.props.url, true);\n      xhr.send(formData);\n      this.xhrs[file.index] = xhr;\n    }\n  }\n\n  filesToItems(files) {\n    const fileItems = Array.prototype.slice.call(files).slice(0, this.props.maxFiles);\n    const items = fileItems.map((f, i) => {\n      if(this.props.chunks) {\n        const chunkProgress = [];\n        for(let j = 0; j <= f.size / this.props.chunkSize; j++) {\n          chunkProgress.push(0);\n        }\n        return {file: f, index: i, progress: 0, cancelled: false, chunkProgress: chunkProgress};\n      }\n      return {file: f, index: i, progress: 0, cancelled: false};\n    });\n    return items;\n  }\n\n  renderButton() {\n    return <button onClick={() => this.onClick()}>{this.props.buttonLabel}</button>;\n  }\n\n  renderInput() {\n    return <input style={{display: 'none'}} accept={this.props.accept} type=\"file\" ref=\"fileInput\" onChange={() => this.onFileSelect()}/>;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderButton()}\n        {this.renderInput()}\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = undefined;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}